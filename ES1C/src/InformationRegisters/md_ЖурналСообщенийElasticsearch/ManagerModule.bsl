#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СоздатьЗаписьЖурналаСтроки(СтруктураЗаполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.md_ЖурналСообщенийElasticsearch.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(СтруктураЗаполнения.Период);	  
	НаборЗаписей.Отбор.Пользователь.Установить(СтруктураЗаполнения.Пользователь);
	НаборЗаписей.Отбор.НомерСеанса.Установить(СтруктураЗаполнения.НомерСеанса);
	НаборЗаписей.Отбор.УникальныйИдентификатор.Установить(СтруктураЗаполнения.УникальныйИдентификатор);
	
	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаполнения);
	
	Попытка
        
        НаборЗаписей.Записать(Истина);
        
    Исключение
        
        ВызватьИсключение ОписаниеОшибки();
        
    КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ОчиститьЖурналСообщенийElasticsearchЗаПериод() Экспорт
        
    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяУниверсальнаяДата());
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ВЫБОР
    |       КОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -1 * СрокХраненияСообщенийElasticsearchВЖурнале.Значение) ЕСТЬ NULL
    |           ТОГДА &ТекущаяДата
    |       ИНАЧЕ ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -1 * СрокХраненияСообщенийElasticsearchВЖурнале.Значение)
    |   КОНЕЦ КАК СрокХранения
    |ПОМЕСТИТЬ ВТСрокХранения
    |ИЗ
    |   Константа.md_СрокХраненияСообщенийElasticsearchВЖурнале КАК СрокХраненияСообщенийElasticsearchВЖурнале
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ ПЕРВЫЕ 100
    |   md_ЖурналСообщенийElasticsearch.Пользователь КАК Пользователь,
    |   md_ЖурналСообщенийElasticsearch.НомерСеанса КАК НомерСеанса,
    |   md_ЖурналСообщенийElasticsearch.УникальныйИдентификатор КАК УникальныйИдентификатор,
    |   md_ЖурналСообщенийElasticsearch.Период КАК Период
    |ИЗ
    |   РегистрСведений.md_ЖурналСообщенийElasticsearch КАК md_ЖурналСообщенийElasticsearch
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТСрокХранения КАК ВТСрокХранения
    |       ПО (ИСТИНА)
    |ГДЕ
    |   md_ЖурналСообщенийElasticsearch.Период < ВТСрокХранения.СрокХранения";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Пока НЕ РезультатЗапроса.Пустой() Цикл
        
        ВыборкаЗапись = РезультатЗапроса.Выбрать();
        
        НачатьТранзакцию();
        
        Попытка
            
            Пока ВыборкаЗапись.Следующий() Цикл
                
                СтруктураЗаписи = Новый Структура("Период, Пользователь, НомерСеанса, УникальныйИдентификатор");
                ЗаполнитьЗначенияСвойств(СтруктураЗаписи, ВыборкаЗапись);            
                УдалитьЗаписьЖурналаСообщений(СтруктураЗаписи);   
                
            КонецЦикла;
            
            ЗафиксироватьТранзакцию();
            
        Исключение
            
            ОтменитьТранзакцию();
            
            СтрокаИнформирования = ОписаниеОшибки();
            md_ВерсионированиеElasticsearchСлужебный.ЗафиксироватьСобытиеИнтеграцииСElasticsearch(
            УровеньЖурналаРегистрации.Ошибка, Неопределено, СтрокаИнформирования); 
            
            ВызватьИсключение СтрокаИнформирования;

        КонецПопытки;
        
        РезультатЗапроса = Запрос.Выполнить();
        
    КонецЦикла; 
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьЗаписьЖурналаСообщений(СтруктураЗаписи)
    
    НаборЗаписейРегистра = РегистрыСведений.md_ЖурналСообщенийElasticsearch.СоздатьНаборЗаписей();
    НаборЗаписейРегистра.Отбор.Период.Установить(СтруктураЗаписи.Период);
    НаборЗаписейРегистра.Отбор.Пользователь.Установить(СтруктураЗаписи.Пользователь);
    НаборЗаписейРегистра.Отбор.НомерСеанса.Установить(СтруктураЗаписи.НомерСеанса);
    НаборЗаписейРегистра.Отбор.УникальныйИдентификатор.Установить(СтруктураЗаписи.УникальныйИдентификатор);
    
    НаборЗаписейРегистра.Записать(Истина);

КонецПроцедуры

#КонецОбласти

#КонецЕсли