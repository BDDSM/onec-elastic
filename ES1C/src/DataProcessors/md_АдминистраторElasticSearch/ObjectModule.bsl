#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСтатистикуПоСерверам(ДеревоОбъектов) Экспорт

	ДеревоОбъектов.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	md_СервераElasticsearch.Ссылка КАК СерверES,
		|	md_СервераElasticsearch.АдресСервера КАК АдресСервера,
		|	md_СервераElasticsearch.Порт КАК Порт,
		|	md_НастройкаВерсионированияОбъектовВElasticsearch.ИндексES КАК ИндексES,
		|	md_НастройкаВерсионированияОбъектовВElasticsearch.ТипМетаданных КАК ТипМетаданных,
		|	0 КАК Doc_count,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(200)) КАК Кey
		|ИЗ
		|	РегистрСведений.md_НастройкаВерсионированияОбъектовВElasticsearch КАК md_НастройкаВерсионированияОбъектовВElasticsearch
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.md_СервераElasticsearch КАК md_СервераElasticsearch
		|		ПО md_НастройкаВерсионированияОбъектовВElasticsearch.СерверElasticsearch = md_СервераElasticsearch.Ссылка
		|ИТОГИ ПО
		|	СерверES";
	
	РезультатЗапроса = Запрос.Выполнить();
	ДеревоОбъектов= РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого СтрокаСерверES Из ДеревоОбъектов.Строки Цикл
	
		Для каждого СтрокаИндексES Из СтрокаСерверES.Строки Цикл
		
			ПолучитьСтатистикуДляСтрокиИндекса(СтрокаИндексES);		
		
		КонецЦикла; 		
	
	КонецЦикла; 	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСтатистикуДляСтрокиИндекса(ОписаниеИндексаES)
	
	Если не ЗначениеЗаполнено(ОписаниеИндексаES.ИндексES)  Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	ТелоЗапроса = "{""aggregations"": {""my_agg"": {""terms"": {""field"": ""Metadata_FullName.keyword"", ""size"": 100}}}}";
	
	ЗаголовкиЗапроса = Новый Соответствие;
	ЗаголовкиЗапроса.Вставить("Content-Type","application/json");
	
	СтруктураОтправкиПакета = Новый Структура("АдресСервера,Порт");
	ЗаполнитьЗначенияСвойств(СтруктураОтправкиПакета,ОписаниеИндексаES);
	
	СтруктураОтправкиПакета.Вставить("Заголовки", ЗаголовкиЗапроса);
	СтруктураОтправкиПакета.Вставить("АдресРесурса",
    md_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1/_search", ОписаниеИндексаES.ИндексES));
	СтруктураОтправкиПакета.Вставить("HTTPМетод", "POST");
	СтруктураОтправкиПакета.Вставить("ВидОперации", "Статистика по индексу");
	СтруктураОтправкиПакета.Вставить("ТелоЗапроса", ТелоЗапроса);
	СтруктураОтправкиПакета.Вставить("УникальныйИдентификатор", Новый УникальныйИдентификатор);
	
	ОтветES = md_ОбщегоНазначенияElasticsearch.ВыполнитьЗапросКElasticSearch(СтруктураОтправкиПакета);
	
	Если ОтветES.КодСостояния >= 200 и ОтветES.КодСостояния < 300 Тогда
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОтветES.ТелоОтвета);
        
        Пока ЧтениеJSON.Прочитать() Цикл
			
			Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства 
				И ЧтениеJSON.ТекущееЗначение = "aggregations" Тогда
				
				Aggregations = ПрочитатьJSON(ЧтениеJSON, Истина);
				
				Для Каждого Buckets из Aggregations.Получить("my_agg").Получить("buckets") Цикл
					
					СтатистикаИндекса = ОписаниеИндексаES.Строки.Добавить();
					СтатистикаИндекса.Кey = Buckets.Получить("key");
					СтатистикаИндекса.Doc_count = Число(Buckets.Получить("doc_count"));
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


