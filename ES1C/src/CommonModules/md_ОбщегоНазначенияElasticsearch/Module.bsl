
#Область ПрограммныйИнтерфейс

Функция ВыполнитьЗапросКElasticSearch(ПараметрыЗапроса) Экспорт
    
    Перем ТелоОтвета, HTTPМетод;
     
	СтрукутраОтвета = Новый Структура;
	
	HTTPСоединение = Новый HTTPСоединение(ПараметрыЗапроса.АдресСервера, ПараметрыЗапроса.Порт);
	
	HTTPЗапрос = Новый HTTPЗапрос;
	ЗаполнитьЗначенияСвойств(HTTPЗапрос, ПараметрыЗапроса, "Заголовки, АдресРесурса");
	УстановитьТелоЗапросаПоПараметрам(HTTPЗапрос, ПараметрыЗапроса);
		
	ДатаНачалаЗапроса = ТекущаяУниверсальнаяДатаВМиллисекундах();
    HTTPМетод = ПолучитьHTTPМетодИзПараметров(ПараметрыЗапроса);
    
    Попытка
        
        HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод(HTTPМетод, HTTPЗапрос);
        
    Исключение
        
        ПараметрыЗапроса.Вставить("ДлительностьЗапроса", ДлительностьВМилисекундах(ДатаНачалаЗапроса));
        ПараметрыЗапроса.Вставить("ТелоОтвета", ПолучитьСодержаниеОшибки(ОписаниеОшибки()));
        
        ЗафиксироватьЗапросВЖурнале(ПараметрыЗапроса);
        
        СтрокаИнформирования = НСтр("ru='В процессе обращения к поисковой системе Elasticsearch возникли ошибки.
        |См. подробности в журнале логирования работы Elasticsearch'");
                
		ВызватьИсключение СтрокаИнформирования;
		       
    КонецПопытки;
    
    ПараметрыЗапроса.Вставить("ДлительностьЗапроса", ДлительностьВМилисекундах(ДатаНачалаЗапроса));
    
    ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку("UTF-8");
	
	ПараметрыЗапроса.Вставить("ТелоОтвета", ТелоОтвета);
	
	ЗафиксироватьЗапросВЖурнале(ПараметрыЗапроса);
	
	СтрукутраОтвета.Вставить("ЗаголовкиОтвета", HTTPОтвет.Заголовки);
    СтрукутраОтвета.Вставить("КодСостояния", HTTPОтвет.КодСостояния);
    СтрукутраОтвета.Вставить("ТелоОтвета", ТелоОтвета);
    	
	Возврат СтрукутраОтвета;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ИмяСервераСеанса() Экспорт
    
    Перем ИмяКомпьютера;
    
    ПараметрыКлиентаНаСервере = ПараметрыСеанса.md_ПараметрыКлиентаНаСервере;
    
    Если ТипЗнч(ПараметрыКлиентаНаСервере) = Тип("ФиксированноеСоответствие") Тогда
        
        ИмяКомпьютера = ПараметрыКлиентаНаСервере.Получить("ИмяКомпьютера");
                
    КонецЕсли; 
        
    Возврат ?(ЗначениеЗаполнено(ИмяКомпьютера), ИмяКомпьютера, "");
		
КонецФункции

Функция УниверсальноеВремяНаСервере() Экспорт
    
    Возврат md_ВерсионированиеElasticsearchВызовСервера.УниверсальноеВремяНаСервере();
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗафиксироватьСообщениеВЖурнале(СтруктураЖурналаСообщений)

	РегистрыСведений.md_ЖурналСообщенийElasticsearch.СоздатьЗаписьЖурналаСтроки(СтруктураЖурналаСообщений);	

КонецПроцедуры

Функция ПолучитьСодержаниеОшибки(ОписаниеОшибки)
    
    ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет);
    
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
    ЗаписьJSON.ЗаписатьНачалоОбъекта();
    ЗаписьJSON.ЗаписатьИмяСвойства("СодержаниеОшибки");
    ЗаписьJSON.ЗаписатьЗначение(ОписаниеОшибки);
    ЗаписьJSON.ЗаписатьКонецОбъекта();
    
    Возврат ЗаписьJSON.Закрыть();
    
КонецФункции 

Функция ДлительностьВМилисекундах(ДатаНачала)
	
	Длительность = ТекущаяУниверсальнаяДатаВМиллисекундах() - ДатаНачала;

	Если Длительность = 0 Тогда
		
		Длительность = 1;
		
	КонецЕсли;
	
	Возврат Длительность;
	
КонецФункции

Процедура ЗафиксироватьЗапросВЖурнале(ПараметрыЗапроса)
	
	Перем ТелоЗапроса;
	
	СтруктураЖурналаСообщений = Новый Структура;
	
	ПараметрыЗапроса.Свойство("ТелоЗапроса", ТелоЗапроса); 
 	БезТела =  НЕ ЗначениеЗаполнено(ТелоЗапроса);
	СтепеньСжатия = 9;
    ХранилищеЗапроса = Новый ХранилищеЗначения(?(БезТела, "", ТелоЗапроса), Новый СжатиеДанных(СтепеньСжатия));
    ХранилищеОтвета = Новый ХранилищеЗначения(ПараметрыЗапроса.ТелоОтвета, Новый СжатиеДанных(СтепеньСжатия));
    
	СтруктураЖурналаСообщений.Вставить("Длительность", ПараметрыЗапроса.ДлительностьЗапроса);
	СтруктураЖурналаСообщений.Вставить("Период", ТекущаяДатаСеанса());
	СтруктураЖурналаСообщений.Вставить("Пользователь", ПараметрыСеанса.md_ТекущийПользователь);
	СтруктураЖурналаСообщений.Вставить("УникальныйИдентификатор", ПараметрыЗапроса.УникальныйИдентификатор);
	СтруктураЖурналаСообщений.Вставить("НомерСеанса", ПолучитьТекущийСеансИнформационнойБазы().НомерСеанса);	
	СтруктураЖурналаСообщений.Вставить("ВидОперации", ПараметрыЗапроса.ВидОперации);
	СтруктураЖурналаСообщений.Вставить("ХранилищеЗапроса", ХранилищеЗапроса);
	СтруктураЖурналаСообщений.Вставить("ХранилищеОтвета", ХранилищеОтвета);
    СтруктураЖурналаСообщений.Вставить("Ресурс", ПараметрыЗапроса.АдресРесурса);
        
	ЗафиксироватьСообщениеВЖурнале(СтруктураЖурналаСообщений);
	
КонецПроцедуры

Функция ПолучитьHTTPМетодИзПараметров(ПараметрыОтправки)
	
	Перем HTTPМетод;
	
	ПараметрыОтправки.Свойство("HTTPМетод", HTTPМетод); 
	
	Если Не ЗначениеЗаполнено(HTTPМетод) Тогда
		
		HTTPМетод = "GET";
		
	КонецЕсли;
	
	Возврат HTTPМетод;
	
КонецФункции

Процедура УстановитьТелоЗапросаПоПараметрам(HTTPЗапрос, ПараметрыОтправки) 
	
	Перем ТелоЗапроса;
 	
 	ПараметрыОтправки.Свойство("ТелоЗапроса", ТелоЗапроса); 
 	
 	БезТела =  НЕ ЗначениеЗаполнено(ТелоЗапроса);
    
    Если НЕ БезТела Тогда
        
		HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
        
	КонецЕсли; 
 		
КонецПроцедуры

Функция СписокМетодовHTTP() Экспорт
	
	МассивМетодовHTTP = Новый Массив;
    МассивМетодовHTTP.Добавить("GET");
    МассивМетодовHTTP.Добавить("POST");
    МассивМетодовHTTP.Добавить("PUT");
    МассивМетодовHTTP.Добавить("COPY");
    МассивМетодовHTTP.Добавить("DELETE");
    МассивМетодовHTTP.Добавить("CONNECT");
    МассивМетодовHTTP.Добавить("HEAD");
    МассивМетодовHTTP.Добавить("PATCH");
    МассивМетодовHTTP.Добавить("PUT");
    МассивМетодовHTTP.Добавить("PROPFIND");
    МассивМетодовHTTP.Добавить("PROPPATCH");
    МассивМетодовHTTP.Добавить("TRACE");
    МассивМетодовHTTP.Добавить("UNLOCK");       
    
    Возврат МассивМетодовHTTP;
    
КонецФункции

#КонецОбласти